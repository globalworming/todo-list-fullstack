openapi: 3.0.3
info:
  title: Life Compliance - OpenAPI 3.0
  description: |-
    OpenAPI 3.0 specification
  version: 1.0-SNAPSHOT
externalDocs:
  description: Github
  url: https://github.com/globalworming/todo-list-fullstack
servers:
  - url: http://localhost:8080
  - url: https://bff-pj7dyotmoa-ew.a.run.app
tags:
  - name: health
    description: check backend health, gRPC mesh implements health service
    externalDocs:
      description: see health service definition
      url: https://github.com/grpc/grpc-java/blob/master/services/src/main/proto/grpc/health/v1/health.proto
  - name: ToDo List
    description: manage lists
paths:
  /health:
    get:
      tags:
        - health
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesHealth'
  /toDoLists:
    post:
      tags:
        - ToDo List
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToDoList'
        required: true
      responses:
        '200':
          description: successful operation
        '400':
          description: bad request
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/ClientError'
                  - $ref: '#/components/schemas/ValidationError'
  /toDoLists/{toDoListId}:
    get:
      tags:
        - ToDo List
      summary: Get list by id
      parameters:
        - name: toDoListId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToDoList'
        '400':
          description: client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
components:
  schemas:
    ClientError:
      type: object
      required:
        - type
        - message
      properties:
        type:
          type: string
          enum:
            - JsonSyntaxException
            - ValidationError
        message:
          type: string
    ToDoList:
      required:
          - name
          - toDos
      type: object
      properties:
        name:
          type: string
        toDos:
          type: array
          items:
            $ref: '#/components/schemas/ToDo'
    ToDo:
      required:
          - description
      type: object
      properties:
        description:
          type: string
    ServicesHealth:
      required:
        - services
      type: object
      properties:
        services:
          type: array
          items:
            $ref: '#/components/schemas/ServiceHealth'
    ServiceHealth:
      required:
        - name
        - serving
      type: object
      properties:
        name:
          type: string
          example: todo-service
        serving:
          type: boolean
          example: true
    ValidationError:
      type: object
      required:
        - type
        - message
        - errors
      properties:
        type:
          type: string
          enum:
            - JsonSyntaxException
            - ValidationError
        message:
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ValidationFieldError'
    ValidationFieldError:
      type: object
      required:
        - path
        - error
      properties:
        path:
          type: string
        error:
          type: string
    GenericError:
      type: object
      required:
        - type
        - message
      properties:
        type:
          type: string
        message:
          type: string